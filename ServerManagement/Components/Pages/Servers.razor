@page "/servers"


@inject NavigationManager NavigationManager
@* @rendermode InteractiveServer *@

<h3>Servers</h3>


<br />
<div class="container-fluid text-center">
	<div class="row w-30">
		@foreach (var city in cities)
		{
			<div class="col">
				@* <div class="card" style="width: 7rem;"> *@
				<div class="card" style="width: 7rem;">
					<img class="card-img-top" src="@($"/images/{city}.png")" alt="...">
					<div class="card-body">
						<button type="button" class="btn btn-primary">@city</button>
					</div>
				</div>

			</div>
		}
	</div>
</div>
@* @foreach (var city in cities)
{
	<button type="button" class="btn btn-primary">@city</button>
	<text>&nbsp;</text>
} *@

<ServerComponent @rendermode="InteractiveServer"></ServerComponent>

<br />

@* <ServerComponent></ServerComponent> *@

<ul>
	@foreach (var server in servers)
	{
		<li>
			@server.Name in @server.City is
			<span style="color:@(server.IsOnline ? "green" : "red");">
				@(server.IsOnline ? "online" : "offline");
			</span>
			<text>&nbsp;</text>
			@* <a href="/servers/edit" class="btn btn-link">Edit</a> *@
			<a href="/servers/@server.ServerId" class="btn btn-link">Edit</a>

			<text>&nbsp;</text>
			<EditForm
				Model="server" 
				FormName="@($"form-server-{server.ServerId}")"
					  OnInvalidSubmit="@(() => { DeleteServer(server.ServerId); })">
				<button type="submit" class="btn btn-primary">Delete</button>
			</EditForm>

		</li>
	}
</ul>
<p>
	<a href="/servers/add" class="btn btn-primary">Add Server</a>
</p>
@code {
	private List<Server> servers = ServersRepository.GetServersByCity("Toronto");

	private List<String> cities = CitiesRepository.GetCities();

	private void DeleteServer(int serverId)
	{
		if(serverId > 0)
		{
			ServersRepository.DeleteServer(serverId);
			NavigationManager.NavigateTo("/servers");
		}
	}
}
